// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Context;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20230427233704_mig_1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Information Technology",
                            Name = "IT"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Human Resources",
                            Name = "HR"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("AllTimeSalary")
                        .HasColumnType("float");

                    b.Property<bool>("AtWork")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfEmployment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 4, 27, 23, 37, 4, 485, DateTimeKind.Utc).AddTicks(6664));

                    b.Property<DateTime?>("DateOfTermination")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HomeAddress")
                        .HasMaxLength(555)
                        .HasColumnType("nvarchar(555)");

                    b.Property<double?>("HourlySalary")
                        .HasColumnType("float");

                    b.Property<string>("IdentityNumbeer")
                        .IsRequired()
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<double?>("MonthlySalary")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(99)
                        .HasColumnType("nvarchar(99)");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TerminationDescription")
                        .HasMaxLength(555)
                        .HasColumnType("nvarchar(555)");

                    b.Property<string>("TerminationReason")
                        .HasMaxLength(99)
                        .HasColumnType("nvarchar(99)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EmployeeCode")
                        .IsUnique();

                    b.HasIndex("IdentityNumbeer")
                        .IsUnique();

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AllTimeSalary = 0.0,
                            AtWork = false,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEmployment = new DateTime(2023, 4, 27, 23, 37, 4, 485, DateTimeKind.Utc).AddTicks(9750),
                            DepartmentId = 1,
                            Email = "employee1@test.com",
                            EmployeeCode = "EMP001",
                            HomeAddress = "Test Address 1",
                            HourlySalary = 27.0,
                            IdentityNumbeer = "12345678901",
                            MonthlySalary = 8100.0,
                            Name = "John",
                            PhoneNumber = "5555555555",
                            Position = "Software Developer",
                            Status = true,
                            Surname = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            AllTimeSalary = 0.0,
                            AtWork = false,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1990, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEmployment = new DateTime(2023, 4, 27, 23, 37, 4, 485, DateTimeKind.Utc).AddTicks(9827),
                            DepartmentId = 1,
                            Email = "employee2@test.com",
                            EmployeeCode = "EMP002",
                            HomeAddress = "Test Address 2",
                            HourlySalary = 30.0,
                            IdentityNumbeer = "36525478985",
                            MonthlySalary = 9000.0,
                            Name = "Jennifer",
                            PhoneNumber = "5555555555",
                            Position = "Software Developer",
                            Status = true,
                            Surname = "Lopez"
                        },
                        new
                        {
                            Id = 3,
                            AllTimeSalary = 0.0,
                            AtWork = false,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1990, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEmployment = new DateTime(2023, 4, 27, 23, 37, 4, 485, DateTimeKind.Utc).AddTicks(9830),
                            DepartmentId = 1,
                            Email = "employee3@test.com",
                            EmployeeCode = "EMP003",
                            HomeAddress = "Test Address 3",
                            HourlySalary = 40.0,
                            IdentityNumbeer = "36569874785",
                            MonthlySalary = 12000.0,
                            Name = "Adriana",
                            PhoneNumber = "5555555555",
                            Position = "Database Designer",
                            Status = true,
                            Surname = "Lima"
                        },
                        new
                        {
                            Id = 4,
                            AllTimeSalary = 0.0,
                            AtWork = false,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1990, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEmployment = new DateTime(2023, 4, 27, 23, 37, 4, 485, DateTimeKind.Utc).AddTicks(9832),
                            DepartmentId = 2,
                            Email = "employee4@test.com",
                            EmployeeCode = "EMP004",
                            HomeAddress = "Test Address 4",
                            HourlySalary = 40.0,
                            IdentityNumbeer = "32125696365",
                            MonthlySalary = 12000.0,
                            Name = "Mine",
                            PhoneNumber = "5555555555",
                            Position = "Secretary",
                            Status = true,
                            Surname = "Tugay"
                        },
                        new
                        {
                            Id = 5,
                            AllTimeSalary = 0.0,
                            AtWork = false,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1990, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEmployment = new DateTime(2023, 4, 27, 23, 37, 4, 485, DateTimeKind.Utc).AddTicks(9834),
                            DepartmentId = 2,
                            Email = "employee5@test.com",
                            EmployeeCode = "EMP005",
                            HomeAddress = "Test Address 5",
                            HourlySalary = 40.0,
                            IdentityNumbeer = "78996369632",
                            MonthlySalary = 12000.0,
                            Name = "Burçin",
                            PhoneNumber = "5555555555",
                            Position = "Secretary",
                            Status = true,
                            Surname = "Terzioğlu"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Employee", b =>
                {
                    b.HasOne("Domain.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Domain.Entities.Department", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
