// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Context;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    partial class BaseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Admins", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@admin.com",
                            Password = "admin123"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin2@admin.com",
                            Password = "admin123"
                        });
                });

            modelBuilder.Entity("Domain.Entities.DailyReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("MoneyPaidToday")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("NumberOfEmployeesInTheWorkplace")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("NumberOfEmployeesNotAtWork")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TotalNumberOfEmployees")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("DailyReports", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2023, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MoneyPaidToday = 1000,
                            NumberOfEmployeesInTheWorkplace = 3,
                            NumberOfEmployeesNotAtWork = 2,
                            TotalNumberOfEmployees = 5
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2023, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MoneyPaidToday = 1250,
                            NumberOfEmployeesInTheWorkplace = 4,
                            NumberOfEmployeesNotAtWork = 1,
                            TotalNumberOfEmployees = 5
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2023, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MoneyPaidToday = 0,
                            NumberOfEmployeesInTheWorkplace = 0,
                            NumberOfEmployeesNotAtWork = 5,
                            TotalNumberOfEmployees = 5
                        });
                });

            modelBuilder.Entity("Domain.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Information Technology",
                            Name = "IT"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Human Resources",
                            Name = "HR"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("AllTimeSalary")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 4)
                        .HasColumnType("float(18)")
                        .HasDefaultValue(0.0);

                    b.Property<bool>("AtWork")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfEmployment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 5, 27, 19, 46, 15, 217, DateTimeKind.Utc).AddTicks(7055));

                    b.Property<DateTime?>("DateOfTermination")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HomeAddress")
                        .HasMaxLength(555)
                        .HasColumnType("nvarchar(555)");

                    b.Property<double?>("HourlySalary")
                        .HasColumnType("float");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<double?>("MonthlySalary")
                        .HasPrecision(18, 4)
                        .HasColumnType("float(18)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Position")
                        .HasMaxLength(99)
                        .HasColumnType("nvarchar(99)");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TerminationDescription")
                        .HasMaxLength(555)
                        .HasColumnType("nvarchar(555)");

                    b.Property<string>("TerminationReason")
                        .HasMaxLength(99)
                        .HasColumnType("nvarchar(99)");

                    b.Property<int>("TotalWorkTime")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("EmployeeCode")
                        .IsUnique();

                    b.HasIndex("IdentityNumber")
                        .IsUnique();

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AllTimeSalary = 0.0,
                            AtWork = false,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEmployment = new DateTime(2023, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Email = "employee1@test.com",
                            EmployeeCode = "EMP001",
                            HomeAddress = "Test Address 1",
                            HourlySalary = 27.0,
                            IdentityNumber = "12345678901",
                            MonthlySalary = 8100.0,
                            Name = "Ali",
                            PhoneNumber = "5555555555",
                            Position = "Software Developer",
                            Status = true,
                            Surname = "ŞEN",
                            TotalWorkTime = 0
                        },
                        new
                        {
                            Id = 2,
                            AllTimeSalary = 0.0,
                            AtWork = false,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1990, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEmployment = new DateTime(2023, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Email = "employee2@test.com",
                            EmployeeCode = "EMP002",
                            HomeAddress = "Test Address 2",
                            HourlySalary = 30.0,
                            IdentityNumber = "36525478985",
                            MonthlySalary = 9000.0,
                            Name = "Veli",
                            PhoneNumber = "5555555555",
                            Position = "Software Developer",
                            Status = true,
                            Surname = "KANDEMİR",
                            TotalWorkTime = 0
                        },
                        new
                        {
                            Id = 3,
                            AllTimeSalary = 0.0,
                            AtWork = false,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1990, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEmployment = new DateTime(2023, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Email = "employee3@test.com",
                            EmployeeCode = "EMP003",
                            HomeAddress = "Test Address 3",
                            HourlySalary = 40.0,
                            IdentityNumber = "36569874785",
                            MonthlySalary = 12000.0,
                            Name = "Eren",
                            PhoneNumber = "5555555555",
                            Position = "Database Designer",
                            Status = true,
                            Surname = "TEPRET",
                            TotalWorkTime = 0
                        },
                        new
                        {
                            Id = 4,
                            AllTimeSalary = 0.0,
                            AtWork = false,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1990, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEmployment = new DateTime(2023, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            Email = "employee4@test.com",
                            EmployeeCode = "EMP004",
                            HomeAddress = "Test Address 4",
                            HourlySalary = 40.0,
                            IdentityNumber = "32125696365",
                            MonthlySalary = 12000.0,
                            Name = "Mehmet",
                            PhoneNumber = "5555555555",
                            Position = "Secretary",
                            Status = true,
                            Surname = "ÇEVİK",
                            TotalWorkTime = 0
                        },
                        new
                        {
                            Id = 5,
                            AllTimeSalary = 0.0,
                            AtWork = false,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1990, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEmployment = new DateTime(2023, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            Email = "employee5@test.com",
                            EmployeeCode = "EMP005",
                            HomeAddress = "Test Address 5",
                            HourlySalary = 40.0,
                            IdentityNumber = "78996369632",
                            MonthlySalary = 12000.0,
                            Name = "Hamza",
                            PhoneNumber = "5555555555",
                            Position = "Secretary",
                            Status = true,
                            Surname = "ERKURAN",
                            TotalWorkTime = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.LoginAndExit", b =>
                {
                    b.Property<string>("Userid_Date")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 5, 27, 19, 46, 15, 218, DateTimeKind.Utc).AddTicks(4386));

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("ExitTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LoginTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 5, 27, 19, 46, 15, 218, DateTimeKind.Utc).AddTicks(3913));

                    b.HasKey("Userid_Date");

                    b.HasIndex("EmployeeCode");

                    b.ToTable("LoginAndExits", (string)null);

                    b.HasData(
                        new
                        {
                            UseridDate = "1_2023-05-25",
                            EmployeeCode = "EMP001",
                            ExitTime = new DateTime(2023, 5, 25, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            LoginTime = new DateTime(2023, 5, 25, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UseridDate = "2_2023-05-25",
                            EmployeeCode = "EMP002",
                            ExitTime = new DateTime(2023, 5, 25, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            LoginTime = new DateTime(2023, 5, 25, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UseridDate = "3_2023-05-25",
                            EmployeeCode = "EMP003",
                            ExitTime = new DateTime(2023, 5, 25, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            LoginTime = new DateTime(2023, 5, 25, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UseridDate = "1_2023-05-26",
                            EmployeeCode = "EMP001",
                            ExitTime = new DateTime(2023, 5, 26, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            LoginTime = new DateTime(2023, 5, 26, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UseridDate = "2_2023-05-26",
                            EmployeeCode = "EMP002",
                            ExitTime = new DateTime(2023, 5, 26, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            LoginTime = new DateTime(2023, 5, 26, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UseridDate = "3_2023-05-26",
                            EmployeeCode = "EMP003",
                            ExitTime = new DateTime(2023, 5, 26, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            LoginTime = new DateTime(2023, 5, 26, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UseridDate = "4_2023-05-26",
                            EmployeeCode = "EMP004",
                            ExitTime = new DateTime(2023, 5, 26, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            LoginTime = new DateTime(2023, 5, 26, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Domain.SqlViews.DashboardStatistic", b =>
                {
                    b.Property<double>("AllTimeSalary")
                        .HasColumnType("float");

                    b.Property<int>("NumberOfEmployeesInTheWorkplace")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfEmployeesNotAtWork")
                        .HasColumnType("int");

                    b.Property<int>("TotalEmployees")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vm_DashboardStatistics", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Employee", b =>
                {
                    b.HasOne("Domain.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Domain.Entities.LoginAndExit", b =>
                {
                    b.HasOne("Domain.Entities.Employee", "Employee")
                        .WithMany("LoginAndExits")
                        .HasForeignKey("EmployeeCode")
                        .HasPrincipalKey("EmployeeCode")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Domain.Entities.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Domain.Entities.Employee", b =>
                {
                    b.Navigation("LoginAndExits");
                });
#pragma warning restore 612, 618
        }
    }
}
